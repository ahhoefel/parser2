func(func) @ :1:1:0
identifierGrammar(main) @ :1:6:5
lparen(() @ :1:10:9
rparen()) @ :1:11:10
lbrace({) @ :1:13:12
var(var) @ :2:5:18
identifierGrammar(x) @ :2:9:22
int(int) @ :2:11:24
equals(=) @ :2:15:28
numberGrammar(3) @ :2:17:30
for(for) @ :3:5:36
identifierGrammar(x) @ :3:9:40
lessThan(<) @ :3:11:42
numberGrammar(10) @ :3:13:44
lbrace({) @ :3:16:47
identifierGrammar(x) @ :4:9:57
equals(=) @ :4:11:59
identifierGrammar(x) @ :4:13:61
plus(+) @ :4:15:63
numberGrammar(1) @ :4:17:65
rbrace(}) @ :5:5:71
if(if) @ :6:5:77
identifierGrammar(x) @ :6:8:80
forwardSlash(/) @ :6:10:82
numberGrammar(2) @ :6:12:84
doubleEquals(=) @ :6:14:86
numberGrammar(0) @ :6:17:89
lbrace({) @ :6:19:91
identifierGrammar(foo) @ :7:9:101
lparen(() @ :7:12:104
identifierGrammar(x) @ :7:13:105
rparen()) @ :7:14:106
rbrace(}) @ :8:5:112
rbrace(}) @ :9:1:114
